<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd"
	default-lazy-init="true">

	<description>Quartz的本地Cron式执行任务配置</description>

	<!-- Quartz本地Schduler -->
	<bean id="localQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">
		<!-- Triggers集成 -->
		<property name="triggers">
			<list>
				<ref bean="synchDataJobCronTrigger" />
				<ref bean="orderStatJobCronTrigger" />
				<ref bean="productStatusCheckJobCronTrigger" />
			</list>
		</property>
		<!-- Quartz配置 -->
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.threadPool.threadCount">5</prop>
			</props>
		</property>
		<!-- 启动时延期3秒开始任务 -->
		<property name="startupDelay" value="3" />
	</bean>
	
	<!-- 定时同步订单和站内信数据 -->
	<bean id="synchDataJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="synchDataJobDetail" />
		<!-- 每10分钟执行一次 -->
		<property name="cronExpression" value="0 0/10 * * * ?" />
	</bean>
	<bean id="synchDataJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="synchDataJob" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="synchDataJob" class="com.demo.schedule.SynchDataJob" lazy-init="false"></bean>
	
	<!-- 定时统计订单数据 -->
	<bean id="orderStatJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="orderStatJobDetail" />
		<!-- 11:59和22:59各执行一次 -->
		<property name="cronExpression" value="0 59 0/11 * * ?" />
	</bean>
	<bean id="orderStatJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="orderStatJob" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="orderStatJob" class="com.demo.schedule.OrderStatJob" lazy-init="false"></bean>
	
	<bean id="orderCancellationDataJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="orderCancellationDataJobDetail" />
		<!-- 每一个小时执行一次 -->
			<property name="cronExpression" value="0 0/50 * * * ?" />
	</bean>
	<bean id="orderCancellationDataJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="orderCancellationDataJob" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="orderCancellationDataJob" class="com.demo.schedule.OrderCancellationDataJob" lazy-init="false"></bean>

	<!-- 定时检测产品状态 -->
	<bean id="productStatusCheckJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="productStatusCheckJobDetail" />
		<!-- 每天00:30,6:30,12:30,18:30各执行一次 -->
		<property name="cronExpression" value="0 30 0/6 * * ?"/>
	</bean>
	<bean id="productStatusCheckJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="productStatusCheckJob" />
		<property name="targetMethod" value="execute" />
		<property name="concurrent" value="false" />
	</bean>
	<bean id="productStatusCheckJob" class="com.demo.schedule.ProductStatusCheckJob" lazy-init="false"></bean>
	
</beans>


